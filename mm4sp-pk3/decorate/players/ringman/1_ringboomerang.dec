actor RingManWep : BaseMM8BDMWep
{
	dropitem ""
	inventory.icon "NULLICON"
	Weapon.AmmoUse 1
	Weapon.AmmoGive 3
	Weapon.SlotNumber 1
	Tag "Ring Boomerang"
	Inventory.Pickupmessage "Power up! Ring Thing Cometh!"
	weapon.ammotype "RingManAmmo"
	+INVENTORY.UNDROPPABLE
	States
	{
	Spawn:
		C_04 E 1
		loop
	Ready:
		RIN1 A 0 ACS_ExecuteAlways(998,0,784)
		RIN1 A 0 A_GiveInventory("SpawningMisfire",1)
		goto Ready0
	Ready0:
		RIN1 A 2 A_WeaponReady
		RIN1 A 0 A_TakeInventory("SpawningMisfire",1)
		Goto Ready2
	SpawnProtect:
		RIN1 A 1
		Goto Ready0
	Ready2:
		RIN1 A 1 A_WeaponReady
		Goto Ready2

	Deselect:
		TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 1 A_Lower
		Loop
	Select:
		TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 A 1 A_Raise
		Loop

	Fire:
		TNT1 A 0 A_JumpIfInventory("SpawningMisfire",1,"SpawnProtect")
		TNT1 A 0 A_JumpIfNoAmmo("NoAmmo")
		RIN1 A 0 A_JumpIfInventory("FiredFirstRing",1,"Fire2")
		RIN1 A 0 A_PlaySoundEx("weapon/ringboomerang","Weapon")
		RIN1 K 0 A_FireCustomMissile("RingBoomerangB1",0,1,8,0)
		RIN1 K 0 A_GiveInventory("FiredFirstRing",1)
		RIN1 K 0 A_SpawnItemEx("RingCounterHelper1")
		RIN1 BCDEF 1
		TNT1 A 1
		RIN1 GH 1
		RIN1 A 0 A_Refire
		goto Ready2
	Fire2:	
		RIN1 A 0 A_JumpIfInventory("FiredSecondRing",1,"Fire3")
		RIN1 A 0 A_PlaySoundEx("weapon/ringboomerang","Weapon")
		RIN1 K 0 A_FireCustomMissile("RingBoomerangB2",0,1,8,0)
		RIN1 K 0 A_GiveInventory("FiredSecondRing",1)
		RIN1 K 0 A_SpawnItemEx("RingCounterHelper2")
		RIN1 BCDEF 1
		TNT1 A 1
		RIN1 GH 1
		RIN1 A 0 A_Refire
		goto Ready2
	Fire3:	
		RIN1 A 0 A_PlaySoundEx("weapon/ringboomerang","Weapon")
		RIN1 K 0 A_FireCustomMissile("RingBoomerangB3",0,1,8,0)
		RIN1 K 0 A_GiveInventory("FiredThirdRing",1)
		RIN1 K 0 A_SpawnItemEx("RingCounterHelper3")
		RIN1 BCDEF 1
		TNT1 A 1
		RIN1 GH 1
		RIN1 A 0 A_Refire
		goto Ready2			

	NoAmmo:
		RIN1 A 1
		RIN1 A 0 A_Refire
		goto Ready2
	}
}

actor RingManAmmo : Ammo
{
inventory.amount 1
inventory.maxamount 3
+INVENTORY.IGNORESKILL
}

actor SPRingCounter1 : Counter { inventory.maxamount 10 }
actor SPRingCounter2 : SPRingCounter1 {}
actor SPRingCounter3 : SPRingCounter1 {}

actor FiredFirstRing : Once {}
actor FiredSecondRing : Once {}
actor FiredThirdRing : Once {}

actor RingBoomerangB1 : BasicBouncer
{
	Translation "192:192=229:229"
	PROJECTILE
	+MTHRUSPECIES
	damagetype "Buster"
	+RIPPER
	+NOTARGETSWITCH
	+SKYEXPLODE
	-ACTIVATEPCROSS
	-ACTIVATEIMPACT
	bouncefactor 1.1
	damage (0)
	Radius 12
	Height 12
	speed 40
	scale 2.5
	States
	{
	Spawn:
		RIN1 A 0
		RIN1 W 0 A_SetArg(0, 6)
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 II 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 JJ 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 KK 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 LL 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Spawn+2
	SpawnWait:
		RING W 0 A_ChangeFlag(DONTSPLASH, true)
		RIN1 W 0 A_Stop
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 II 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 JJ 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 KK 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 LL 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return
	Return:
		TNT1 A 0 A_ChangeFlag(THRUACTORS, true)
		TNT1 A 0 A_ChangeFlag(NOINTERACTION, true)
		TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_TARGET)
		TNT1 A 0 A_FaceTarget
		RIN1 I 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 J 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 K 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 L 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter1",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return+3
	Death: // As a failsafe
	Give:
		RIN1 A 0 A_GiveToTarget("RingManAmmo", 1)
		RIN1 A 0 A_GiveToTarget("RingReturn", 1)
		RIN1 A 0 A_TakeFromTarget("FiredFirstRing", 999)
		RIN1 A 0 A_TakeFromTarget("SPRingCounter1", 999)
		stop
	}
}

actor RingBoomerangB2 : RingBoomerangB1
{
	States
	{
	Spawn:
		RIN1 A 0
		RIN1 W 0 A_SetArg(0, 6)
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 II 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 JJ 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 KK 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 LL 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Spawn+2
	SpawnWait:
		RING W 0 A_ChangeFlag(DONTSPLASH, true)
		RIN1 W 0 A_Stop
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 II 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 JJ 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 KK 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 LL 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return
	Return:
		TNT1 A 0 A_ChangeFlag(THRUACTORS, true)
		TNT1 A 0 A_ChangeFlag(NOINTERACTION, true)
		TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_TARGET)
		TNT1 A 0 A_FaceTarget
		RIN1 I 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 J 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 K 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 L 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter2",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return+3
	Death: // As a failsafe
	Give:
		RIN1 A 0 A_GiveToTarget("RingManAmmo", 1)
		RIN1 A 0 A_GiveToTarget("RingReturn", 1)
		RIN1 A 0 A_TakeFromTarget("FiredSecondRing", 999)
		RIN1 A 0 A_TakeFromTarget("SPRingCounter2", 999)
		stop
	}
}

actor RingBoomerangB3 : RingBoomerangB1
{
	States
	{
	Spawn:
		RIN1 A 0
		RIN1 W 0 A_SetArg(0, 6)
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 II 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 JJ 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 KK 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 LL 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_SetArg(0, args[0]-1)
		RIN1 W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Spawn+2
	SpawnWait:
		RING W 0 A_ChangeFlag(DONTSPLASH, true)
		RIN1 W 0 A_Stop
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 II 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 JJ 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 KK 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 A 0 A_JumpIfInTargetInventory("RingManAmmo", 3, "Death")
		RIN1 LL 1 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return
	Return:
		TNT1 A 0 A_ChangeFlag(THRUACTORS, true)
		TNT1 A 0 A_ChangeFlag(NOINTERACTION, true)
		TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_TARGET)
		TNT1 A 0 A_FaceTarget
		RIN1 I 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 I 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 J 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 K 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_Explode(3, radius, 0, 0, radius+1)
		RIN1 L 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RIN1 I 0 A_TakeFromTarget("SPRingCounter3",999)
		RIN1 W 0 A_JumpIfCloser(32, "Give")
		RIN1 W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RIN1 W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RIN1 W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return+3
	Death: // As a failsafe
	Give:
		RIN1 A 0 A_GiveToTarget("RingManAmmo", 1)
		RIN1 A 0 A_GiveToTarget("RingReturn", 1)
		RIN1 A 0 A_TakeFromTarget("FiredThirdRing", 999)
		RIN1 A 0 A_TakeFromTarget("SPRingCounter3", 999)
		stop
	}
}

actor RingSparkle : BasicClientSide
{
Renderstyle "Normal"
Alpha 1.0
States
{
Spawn:
FLAS CBABC 2 bright
stop
}
}

actor RingReturn : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_PlaySoundEx("weapon/ringcatch", "body")
		stop
	}
}

actor RingCounterHelper1
{
+MISSILE
-SOLID
+NOCLIP
+NOINTERACTION
+NOGRAVITY
+DONTBLAST
+DONTREFLECT
+THRUACTORS
renderstyle none
radius 2
height 2
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("SPRingCounter1",10,"Return")
TNT1 A 1 A_GiveToTarget("SPRingCounter1",1)
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,1)
TNT1 A 0 A_JumpIfInTargetInventory("FiredFirstRing",1,"Spawn")
TNT1 A 0
stop
Return:
MMFX B 0 A_TakeFromTarget("SPRingCounter1",999)
MMFX B 0 A_GiveToTarget("RingManAmmo",1)
RIN1 A 0 A_GiveToTarget("RingReturn", 1)
MMFX B 0 A_TakeFromTarget("FiredFirstRing",999)
stop    
}
}

actor RingCounterHelper2 : RingCounterHelper1
{
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("SPRingCounter2",10,"Return")
TNT1 A 1 A_GiveToTarget("SPRingCounter2",1)
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,1)
TNT1 A 0 A_JumpIfInTargetInventory("FiredSecondRing",1,"Spawn")
TNT1 A 0
stop
Return:
MMFX B 0 A_TakeFromTarget("SPRingCounter2",999)
MMFX B 0 A_GiveToTarget("RingManAmmo",1)
RIN1 A 0 A_GiveToTarget("RingReturn", 1)
MMFX B 0 A_TakeFromTarget("FiredSecondRing",999)
stop    
}
}

actor RingCounterHelper3 : RingCounterHelper1
{
States
{
Spawn:
TNT1 A 0
TNT1 A 0 A_JumpIfInTargetInventory("SPRingCounter3",10,"Return")
TNT1 A 1 A_GiveToTarget("SPRingCounter3",1)
TNT1 A 0 A_JumpIfInTargetInventory("IsDead",1,1)
TNT1 A 0 A_JumpIfInTargetInventory("FiredThirdRing",1,"Spawn")
TNT1 A 0
stop
Return:
MMFX B 0 A_TakeFromTarget("SPRingCounter3",999)
MMFX B 0 A_GiveToTarget("RingManAmmo",1)
RIN1 A 0 A_GiveToTarget("RingReturn", 1)
MMFX B 0 A_TakeFromTarget("FiredThirdRing",999)
stop    
}
}