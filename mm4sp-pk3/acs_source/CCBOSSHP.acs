#include "zcommon.acs"
#include "8BDMLIB.acs"

#define BOSS_NOTSTARTED 0
#define BOSS_INTRO 1
#define BOSS_INPROGRESS 2
#define BOSS_DEFEATED 3

int bossState = BOSS_NOTSTARTED;
int bossTID = 5000;

int bossMaxHP = 1000;
int bossHP = 0;

bool bossInvuln = false;

script "4SP_BossStatus_Enter" ENTER
{
    Delay(1);
    int pln = PlayerNumber();
    int tid = ActivatorTID();
    int spot = GetCVar("CCSP_BossSpawn");

    bool introFrozen = false;
    int oldHP = bossHP;
    int hpPercent, hpAmt;
    int hpAmtMax = GetAmmoCapacity("CCBossHealth");

    while(GetActorProperty(tid, APROP_Health) > 0)
    {
        if(CheckInventory("BossFlag")) {

            if(bossState == BOSS_INTRO && !introFrozen)
            {
                ACS_NamedExecuteAlways("core_freezeplayer", 0, 0, true);
                ActorFace(0, spot);
                SetActorPitch(0, 0);
                Thing_Stop(0);
                introFrozen = true;
            }
            else if(bossState != BOSS_INTRO && introFrozen)
            {
                ACS_NamedExecuteAlways("core_freezeplayer", 0, 0, false);
                introFrozen = false;
            }

            if(oldHP != bossHP)
            {
                hpPercent = FixedDiv(bossHP, bossMaxHP);
                hpAmt = FixedMul(hpPercent, hpAmtMax);
                SetActorInventory(tid, "CCBossHealth", hpAmt);
            }

            if(bossHP <= 0)
            {
                SetActorInventory(tid, "CCBossHealth", 0);
            }

            if(bossInvuln && CheckInventory("CCBossInvuln") == 0)
            {
                GiveInventory("CCBossInvuln", 1);
            }

            if(!bossInvuln && CheckInventory("CCBossInvuln") > 0)
            {
                TakeInventory("CCBossInvuln", 1);
            }
        }
        Delay(1);
    }
}

script "4SP_BossActivate" (void)
{
    str bossTheme = GetCVarString("mm8bdm_map_bossmusic");

    if(bossState == BOSS_INTRO)
    {
        if(CheckInventory("BossFlag") == 0)
        {
            GiveInventory("BossFlag", 1);
        }
    }
    else if(bossState == BOSS_NOTSTARTED)
    {
        bossState = BOSS_INTRO;
        GiveInventory("BossFlag", 1);

        int door = GetCVar("CCSP_BossDoor");
        int spot = GetCVar("CCSP_BossSpawn");
        str bossObj = GetCVarString("CCSP_BossObj");

        Door_Open(door, 64, 0);
        TagWait(door);

        Delay(10);
        int angle = GetActorAngle(0);
        SetActorVelocity(0, FixedMul(cos(angle), 10.0), FixedMul(sin(angle), 10.0), 0, false, true);
        Delay(10);
        Door_Close(door, 64, 0);
        TagWait(door);
        Delay(20);

        bossTID = UniqueTID(5000);
        SetMusic(bossTheme);
        SpawnSpot(bossObj, spot, bossTID, GetActorAngle(spot)>>8);
        GiveActorInventory(bossTID, "BossIntroFlag", 1);
    }
    else if(bossState == BOSS_INPROGRESS || bossState == BOSS_DEFEATED)
    {
        spot = GetCVar("CCSP_BossSpawn");
        Teleport(spot, 0, false);
    }
}

script "4SP_BossManage" (void)
{
    if(CheckInventory("BoostFlag")>0){ terminate; }
    GiveInventory("BoostFlag", 1);
    
    str victoryMusic = GetCVarString("mm8bdm_map_victorymusic");

    bossMaxHP = GetActorProperty(0, APROP_Health);

    int hpIter = fixedMul(bossMaxHP, 0.04);
    
    while(bossHP < bossMaxHP) {
        AmbientSound("item/energyup",127);
        bossHP = clamp(0, bossHP+hpIter, bossMaxHP);
        Delay(3);
    }
    
    Delay(10);

    SetActorState(0, "Spawn");
    bossState = BOSS_INPROGRESS;
	
    while(GetActorProperty(0, APROP_Health)>0)
    {
        if(bossHP > GetActorProperty(0, APROP_Health))
        {
            PlayActorSound(0, SOUND_Pain, CHAN_BODY, 1.0, false, ATTN_NORM);
            SetActorProperty(0, APROP_RenderStyle, STYLE_None);
            Delay(1);
            SetActorProperty(0, APROP_RenderStyle, STYLE_Normal);
            bossHP = GetActorProperty(0, APROP_Health);
		}

        if(CheckInventory("CCBossInvuln") > 0 && !bossInvuln)
        {
            bossInvuln = true;
        }

        if(CheckInventory("CCBossInvuln") == 0 && bossInvuln)
        {
            bossInvuln = false;
        }
		
        Delay(1);
    }

    bossState = BOSS_DEFEATED;

    SetMusic("");
    Delay(3*35);
    SetMusic(victoryMusic);
    Delay(6*35);
    SetMusic("");
    Delay(35);

    ChangeLevel("CCHUB", 0, CHANGELEVEL_NOINTERMISSION);
}

function void SetActorInventory(int tid, str inv, int amt) {
    int oldamt = CheckActorInventory(tid, inv);
	if(oldamt>amt)
	{
		TakeActorInventory(tid, inv, oldamt-amt);
	}
	else
	{
		GiveActorInventory(tid, inv, amt-oldamt);
	}
}

function int clamp(int minamt, int amt, int maxamt) {

    if(amt < minamt) {
        return minamt;
    }

    if(amt > maxamt) {
        return maxamt;
    }

    return amt;
}
