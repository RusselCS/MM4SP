actor RingManWep : BaseMM8BDMWep
{
	dropitem ""
	Weapon.AmmoUse 1
	Weapon.AmmoGive 5
	Weapon.SlotNumber 4
	Obituary "$OB_RINGBOOMERANG"
	Inventory.Pickupmessage "Power up! Ring Thing Cometh!"
	weapon.ammotype "RingManAmmo"
	+WEAPON.NOAUTOFIRE
	States
	{
	Spawn:
		C_04 E 1
		loop
	Ready:
		RINA A 0 ACS_ExecuteAlways(998,0,784)
		RINA A 0 A_JumpIfInventory("RingManAmmo", 5, "ReadyFull")
		RINA A 0 A_JumpIfInventory("RingmanReloading", 1, "ReadyFull")
		RINA A 0 A_JumpIfInventory("RingmanReload", 1, "ReadyFull")
		RINA A 0 A_JumpIfNoAmmo("ReadyEmpty")
		RINA A 1 A_WeaponReady
		goto Ready+1

	ReadyFull:
		RINA A 1 A_WeaponReady(WRF_NOSECONDARY)
		goto Ready+1

	ReadyEmpty:
		RINA A 1 A_WeaponReady(WRF_NOPRIMARY)
		goto Ready+1

	Deselect:
		TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Lower
		TNT1 A 1 A_Lower
		Loop
	Select:
		TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_Raise
		TNT1 A 1 A_Raise
		Loop

	Fire:
		TNT1 A 0 A_JumpIfNoAmmo("ReadyEmpty")
		RINA A 0 A_PlaySoundEx("weapon/ringboomerang","Weapon")
		RINA K 0 A_TakeInventory("RingmanReloading", 9)
		RINA K 0 A_TakeInventory("RingmanReload", 1)
		RINA K 0 A_FireCustomMissile("RingBoomerangB",0,1,8,0)
		RINA BCDEF 1
		TNT1 A 1
		RINA GH 1
		RINA A 0 A_Refire
		goto Ready+1

	Altfire:
		RINA A 0 A_GiveInventory("RingmanReloading", 5-CallACS("4SP_CountInv", 0))
		RINA A 0 A_GiveInventory("RingmanReload", 1)
		RINA A 0 A_GiveInventory("RingmanReturn", 1)
		RINA A 0 A_Gunflash
		RINA HG 1
		TNT1 A 1
		RINA FEDCB 1
		goto Ready+1

	Flash:
		TNT1 A 1
		TNT1 A 0 A_JumpIfInventory("RingManAmmo", 5, "FlashEnd")
		TNT1 A 0 A_JumpIfInventory("RingmanReload", 1, "Flash")
		TNT1 A 0 A_JumpIfInventory("RingmanReloading", 1, "FlashReload")
		goto FlashEnd
	FlashReload:
		TNT1 A 0 A_GiveInventory("RingReturn", 1)
		TNT1 A 0 A_GiveInventory("RingManAmmo", 1)
		TNT1 A 20
		TNT1 A 0 A_TakeInventory("RingmanReloading", 1)
		TNT1 A 0 A_JumpIfInventory("RingmanReloading", 1, "FlashReload")
		goto FlashEnd
	FlashEnd:
		TNT1 A 0
		stop
	}
}

actor RingManAmmo : Ammo
{
inventory.amount 1
inventory.maxamount 5
+INVENTORY.IGNORESKILL
}

actor RingmanReload : Powerup
{
	powerup.duration 85
}

actor RingBossReloadCancel : Powerup
{
	powerup.duration 2
}

actor RingmanReloading : Counter { inventory.maxamount 5 }
actor RingmanReturn : Powerup { powerup.duration 3 }

actor RingBoomerangB
{
	var int user_POWER;
	Translation "192:192=229:229"
	PROJECTILE
	damagetype "RingBoomerangB"
	Obituary "$OB_RINGBOOMERANG"
	+RIPPER
	+NOTARGETSWITCH
	+CANBOUNCEWATER
	+SKYEXPLODE
	-ACTIVATEPCROSS
	-ACTIVATEIMPACT
	bouncetype "Hexen"
	bouncefactor 1.1
	damage (0)
	Radius 12
	Height 12
	speed 40
	scale 2.5
	States
	{
	Spawn:
		RINA A 0
		RINA A 0 A_SetUserVar(user_POWER, 10)
		RINA A 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA WWXX 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA YYZZ 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		RINA W 0 A_SetArg(0, 3)
		goto SpawnLoop
	SpawnLoop:
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA WW 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA W 0 A_SetArg(0, args[0]-1)
		RINA W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA XX 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA W 0 A_SetArg(0, args[0]-1)
		RINA W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RINA W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA YY 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA W 0 A_SetArg(0, args[0]-1)
		RINA W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA ZZ 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA W 0 A_SetArg(0, args[0]-1)
		RINA W 0 A_JumpIf(args[0] <= 0, "SpawnWait")
		RINA W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		loop
	SpawnWait:
		RING W 0 A_ChangeFlag(DONTSPLASH, true)
		RINA W 0 A_SetUserVar(user_POWER, 3)
		RINA W 0 A_Stop
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA WW 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA XX 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA YY 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA A 0 A_JumpIfInTargetInventory("RingManAmmo", 5, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA ZZ 1 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 0 A_JumpIfInTargetInventory("IsDead", 1, "Death")
		RINA W 0 A_JumpIfInTargetInventory("RingmanReturn", 1, "Return")
		RINA W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto SpawnWait+2
	Return:
		TNT1 A 0 A_ChangeFlag(THRUACTORS, true)
		TNT1 A 0 A_ChangeFlag(NOINTERACTION, true)
		TNT1 A 0 A_RearrangePointers(AAPTR_DEFAULT, AAPTR_DEFAULT, AAPTR_TARGET)
		TNT1 A 0 A_SetUserVar(user_POWER, 10)
		TNT1 A 0 A_FaceTarget
		RINA W 0 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA W 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RINA W 0 A_JumpIfCloser(32, "Give")
		RINA W 0 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA X 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RINA W 0 A_JumpIfCloser(32, "Give")
		RINA W 0 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA Y 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RINA W 0 A_JumpIfCloser(32, "Give")
		RINA W 0 A_Explode(user_POWER, radius, 0, 0, radius+1)
		RINA Z 1 A_SeekerMissile(180, 180, SMF_PRECISE)
		RINA W 0 A_JumpIfCloser(32, "Give")
		RINA W 0 A_SpawnItemEx("RingSparkle", frandom(-16, 16), frandom(-16, 16), frandom(-16, 16))
		RINA W 0 A_JumpIf(CallACS("4SP_CheckAlive")==0, "Death")
		goto Return+3
	Death: // As a failsafe
	Give:
		RINA A 0 A_GiveToTarget("RingReturn", 1)
		RINA A 0 A_GiveToTarget("RingManAmmo", 1)
		RINA A 0 A_TakeFromTarget("RingmanReloading", 1)
		stop
	}
}

actor RingSparkle : BasicClientSide
{
Renderstyle "Normal"
Alpha 1.0
States
{
Spawn:
FLAS CBABC 2 bright
stop
}
}

actor RingReturn : CustomInventory
{
	+INVENTORY.AUTOACTIVATE
	States
	{
	Use:
		TNT1 A 0 A_PlaySoundEx("weapon/ringcatch", "body")
		stop
	}
}
